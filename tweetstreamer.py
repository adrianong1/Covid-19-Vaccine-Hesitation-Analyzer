# -*- coding: utf-8 -*-
"""tweetStreamer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14Uw0FRCeFv9JvE5upEQa38xVSqQrYf0i
"""

import tweepy
import pandas as pd
import csv

CONSUMER_KEY = "******************"
CONSUMER_SECRET = "******************"
ACCESS_TOKEN = "******************"
ACCESS_TOKEN_SECRET = "******************"

SEARCH_WORDS_LIST = ["covid vaccine unsafe", "covid vaccine already had covid", "covid vaccine choice", "covid vaccine freedom",
                     "covid vaccine ineffective", "covid vaccine not serious health risk", "covid vaccine no access", "covid vaccine dangerous",
                     "covid vaccine fake", "covid vaccine already infected", "covid vaccine unproven", "covid vaccine dangerous side effects", "covid vaccine natural immunity"]

with open('LiveStreamedTweets.csv', 'r') as csv_file:
  reader = csv.reader(csv_file)
  row0 = next(reader)
  print("First Row: ", row0)
  print(("========================\n\n"))

class TweetStreamListener(tweepy.StreamListener):
  def __init__(self, api=None):
    super(TweetStreamListener, self).__init__()
    self.num_tweets = 0

  def on_status(self, status):
    if hasattr(status, "retweeted_status"): # Check if retweet
      try:
        text = status.retweeted_status.extended_tweet["full_text"]
      except AttributeError:
        text = status.retweeted_status.text
    else:
      try:
        text = status.extended_tweet['full_text']
      except AttributeError:
        text = status.text

    text = text.replace('\n', ' ').replace('\r', '')
    textList = []
    textList.append(text)

    print("\n\n------------------------------------")
    print("Tweet: ", textList[0])
    print("------------------------------------\n\n")

    f = open('LiveStreamedTweets.csv', 'a')
    with f:
      writer = csv.writer(f)
      writer.writerow(textList)
    self.num_tweets += 1
    if self.num_tweets < 300:
      return True
    else:
      print("\n\n------------------------------------")
      print("Program Exiting")
      print("------------------------------------\n\n")
      return False

  def on_error(self, status_code):
    print(status_code)

# Twitter api authentication
auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)

# Stream the tweets
tweetStream = tweepy.Stream(auth=auth, listener=TweetStreamListener(), tweet_mode='extended')
tweetStream.filter(languages=["en"], track=SEARCH_WORDS_LIST)
